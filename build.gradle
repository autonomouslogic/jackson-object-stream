plugins {
	id "java"
	id "idea"
	id "org.danilopianini.git-sensitive-semantic-versioning-gradle-plugin" version "3.1.7"
	id "maven-publish"
	id "signing"
	id "io.github.gradle-nexus.publish-plugin" version "2.0.0"
	id "jacoco"
	id "com.diffplug.spotless" version "6.25.0"
}

group "com.autonomouslogic.jacksonobjectstream"

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}

dependencies {
	implementation "com.fasterxml.jackson.core:jackson-databind:2.17.2"

	testImplementation "junit:junit:4.13.2"
	testImplementation "com.fasterxml.jackson.core:jackson-annotations:2.17.2"
	testImplementation "com.google.guava:guava:33.3.0-jre"
}

test {
	testLogging {
		events = [ "FAILED", "PASSED", "SKIPPED" ]
		showExceptions = true
		exceptionFormat = "FULL"
		showExceptions = true
		showCauses = true
		showStackTraces = true
	}
}

jacocoTestReport {
	reports {
		xml.required = true
		html.required = true
	}
}

java {
	withJavadocJar()
	withSourcesJar()
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			pom {
				name = "Jackson Object Stream"
				description = "Simple streaming of JSON-encoded objects."
				url = "https://bitbucket.org/autonomouslogic/jackson-object-stream"
				licenses {
					license {
						name = "MIT-0"
						url = "https://spdx.org/licenses/MIT-0.html"
					}
				}
				developers {
					developer {
						id = "kennethjor"
						name = "Kenneth JÃ¸rgensen"
						email = "kenneth@autonomouslogic.com"
					}
				}
				scm {
					connection = "scm:git:git://bitbucket.org:autonomouslogic/jackson-object-stream.git"
					developerConnection = "scm:git:ssh://bitbucket.org:autonomouslogic/jackson-object-stream.git"
					url = "https://bitbucket.org/autonomouslogic/jackson-object-stream"
				}
			}
			from(components.java)
		}
	}
}

signing {
	sign publishing.publications.mavenJava
}

nexusPublishing {
	repositories {
		sonatype()
	}
}

spotless {
	java {
		palantirJavaFormat()
		indentWithTabs()
	}

	groovyGradle {
		indentWithTabs()
	}
}
